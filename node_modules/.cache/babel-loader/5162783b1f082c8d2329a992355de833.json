{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\conor\\\\Google Drive\\\\portfolioAWS\\\\myapp\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport Amplify, { API, graphqlOperation } from \"aws-amplify\";\nimport awsconfig from \"./aws-exports\"; // eslint-disable-next-line\n\nimport { AmplifySignOut, withAuthenticator } from \"@aws-amplify/ui-react\";\nimport { listProjects } from \"./graphql/queries\";\nimport { useEffect, useState } from \"react\";\nimport { Card, CardContent, CardActions, Button, Grid, GridList, GridListTile } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAmplify.configure(awsconfig);\n\nfunction App() {\n  _s();\n\n  // eslint-disable-next-line\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n\n  const fetchProjects = async () => {\n    try {\n      const projectData = await API.graphql(graphqlOperation(listProjects));\n      const projectList = projectData.data.listProjects.items;\n      console.log(\"PROJECTS \", projectList);\n      setProjects(projectList);\n    } catch (error) {\n      console.log(\"error on fetching projects from api\", error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My App Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/conor/Google Drive/portfolioAWS/myapp/src/App.jsx"],"names":["Amplify","API","graphqlOperation","awsconfig","AmplifySignOut","withAuthenticator","listProjects","useEffect","useState","Card","CardContent","CardActions","Button","Grid","GridList","GridListTile","configure","App","projects","setProjects","fetchProjects","projectData","graphql","projectList","data","items","console","log","error"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,OAAP,IAAkBC,GAAlB,EAAuBC,gBAAvB,QAA+C,aAA/C;AACA,OAAOC,SAAP,MAAsB,eAAtB,C,CACA;;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,uBAAlD;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SACEC,IADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,MAJF,EAKEC,IALF,EAMEC,QANF,EAOEC,YAPF,QAQO,mBARP;;AAUAf,OAAO,CAACgB,SAAR,CAAkBb,SAAlB;;AAEA,SAASc,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,aAAa,GAAG,YAAY;AAChC,QAAI;AACF,YAAMC,WAAW,GAAG,MAAMpB,GAAG,CAACqB,OAAJ,CAAYpB,gBAAgB,CAACI,YAAD,CAA5B,CAA1B;AACA,YAAMiB,WAAW,GAAGF,WAAW,CAACG,IAAZ,CAAiBlB,YAAjB,CAA8BmB,KAAlD;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,WAAzB;AACAJ,MAAAA,WAAW,CAACI,WAAD,CAAX;AACD,KALD,CAKE,OAAOK,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDC,KAAnD;AACD;AACF,GATD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAjDQX,G;;KAAAA,G;AAmDT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport Amplify, { API, graphqlOperation } from \"aws-amplify\";\nimport awsconfig from \"./aws-exports\";\n// eslint-disable-next-line\nimport { AmplifySignOut, withAuthenticator } from \"@aws-amplify/ui-react\";\nimport { listProjects } from \"./graphql/queries\";\nimport { useEffect, useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Button,\n  Grid,\n  GridList,\n  GridListTile\n} from \"@material-ui/core\";\n\nAmplify.configure(awsconfig);\n\nfunction App() {\n  // eslint-disable-next-line\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n\n  const fetchProjects = async () => {\n    try {\n      const projectData = await API.graphql(graphqlOperation(listProjects));\n      const projectList = projectData.data.listProjects.items;\n      console.log(\"PROJECTS \", projectList);\n      setProjects(projectList);\n    } catch (error) {\n      console.log(\"error on fetching projects from api\", error);\n    }\n  };\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>My App Content</h2>\n      </header>\n      {/* <div>\n        <Grid\n          container\n          spacing={3}\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"flex-start\"\n        >\n          {projects.map((project) => (\n            <Grid item ld='auto' md='auto' key={projects.indexOf(project)}>\n              <Card className=\"projectCard\">\n                <CardContent className=\"projectTitle\">\n                  {project.title}\n                </CardContent>\n                <CardActions>\n                  <Button size=\"small\" color=\"primary\">\n                    Read More\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}